apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.randolphledesma.testlab"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

ext {
    material_version = "1.1.0-beta01"
    dagger_version = "2.27"
    glide_version = "4.9.0"
    picasso_version = "2.5.2"
    androidx_version = "1.1.0"
    coroutine_version = "1.3.5"
    gson_version = "2.8.6"
    zxing_version = "3.3.3"
    flexbox_version = "2.0.1"
    customtabs_version = "23.3.0"
    junit_version = "4.12"
    testrunner_version = "1.2.0"
    espresso_version = "3.2.0"
    multidex_version = "1.0.3"
    room_version = "2.2.5"
    lifecycle_version = "2.2.0"
    fragment_version = "1.2.4"
    work_version = "2.1.0"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$androidx_version"
    implementation "androidx.core:core-ktx:$androidx_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "com.google.android:flexbox:$flexbox_version"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "androidx.work:work-runtime-ktx:$work_version"

    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.picasso:picasso:$picasso_version"

    implementation('com.journeyapps:zxing-android-embedded:3.6.0@aar') { transitive = false }
    implementation "com.google.zxing:core:$zxing_version"

    implementation "com.android.support:multidex:$multidex_version"
    implementation "com.android.support:customtabs:$customtabs_version"

    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$testrunner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    api "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    api "com.google.dagger:dagger-android:$dagger_version"
    api "com.google.dagger:dagger-android-support:$dagger_version"
    // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"
}
